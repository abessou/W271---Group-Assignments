library(car)
library(psych)
install.packages('pbkrtest')
version
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
library(car)
install.packages("car")
library(car)
install.packages("car", dependencies=TRUE)
library(car)
version
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
getwd()
setwd("C:/Users/rohan_000/Documents/Berkeley/W271-2 - Applied Regression and Time Series Analysis/Assignments/hw1")
library(car)
library(ggplot2)
install.packages('ggplot2')
install.packages('sandwich')
library(ggplot2)
library(sandwich)
load("data/data/201k_w271.RData")
load("data/201k_w271.RData")
setwd("C:/Users/rohan_000/Documents/Berkeley/W271-2 - Applied Regression and Time Series Analysis/Assignments/hw2")
load("401k_w271.RData")
desc
summary(data$prate)
hist(data$prate)
hist(data$prate, breaks=100)
hist(data$prate, breaks=25)
print(quantile(data$prate, probs = c(.01, .05, .10, .25, .50, .75, .90, .95, .99, 1)))
summary(data$prate)
print(quantile(data$prate, probs = c(.01, .05, .10, .25, .50, .75, .90, .95, .99, 1)))
prate.hist <- ggplot(data, aes(prate)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$prate)[2] - range(data$prate)[1])/15) +
labs(title = "Distribution of Prate", x = "Participation Rate", y = "Frequency")
plot(prate.hist)
prate.hist <- ggplot(data, aes(prate)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$prate)[2] - range(data$prate)[1])/30) +
labs(title = "Distribution of Prate", x = "Participation Rate", y = "Frequency")
plot(prate.hist)
prate.hist <- ggplot(data, aes(prate)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$prate)[2] - range(data$prate)[1])/60) +
labs(title = "Distribution of Prate", x = "Participation Rate", y = "Frequency")
plot(prate.hist)
summary(data$prate)
data$prate.clean = data$prate[data$prate<=100]
data$prate.clean = data$prate
data$prate.clean[data$prate.clean>100]=NA
summary(data$prate.clean)
summary(data$mrate)
print(quantile(data$mrate, probs = c(.01, .05, .10, .25, .50, .75, .90, .95, .99, 1)))
mrate.hist <- ggplot(data, aes(mrate)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$mrate)[2] - range(data$mrate)[1])/15) +
labs(title = "Distribution of mrate", x = "Matching Rate", y = "Frequency")
plot(mrate.hist)
mrate.hist <- ggplot(data, aes(mrate)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$mrate)[2] - range(data$mrate)[1])/30) +
labs(title = "Distribution of mrate", x = "Matching Rate", y = "Frequency")
plot(mrate.hist)
mrate.hist <- ggplot(data, aes(mrate)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$mrate)[2] - range(data$mrate)[1])/60) +
labs(title = "Distribution of mrate", x = "Matching Rate", y = "Frequency")
plot(mrate.hist)
mrate.hist <- ggplot(data, aes(mrate)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$mrate)[2] - range(data$mrate)[1])/100) +
labs(title = "Distribution of mrate", x = "Matching Rate", y = "Frequency")
plot(mrate.hist)
mrate.hist <- ggplot(data, aes(mrate)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$mrate)[2] - range(data$mrate)[1])/60) +
labs(title = "Distribution of mrate", x = "Matching Rate", y = "Frequency")
plot(mrate.hist)
data$mrate.clean = data$mrate
data$mrate.clean[data$mrate.clean>100]=NA
summary(data$mrate.clean)
summary(data$prate.clean)
data$mrate.clean = data$mrate
data$mrate.clean[data$mrate.clean>100]=NA
data$mrate.clean = data$mrate*100
data$mrate.clean[data$mrate.clean>100]=NA
summary(data$mrate.clean)
len(data$mrate.clean)
length(data$mrate.clean)
scatter.prate.mrate <- ggplot(data, aes(prate.clean, mrate.clean)) +
geom_point(colour = "Blue", position = "jitter") +
geom_smooth(method = "lm", colour = "Red") +
labs(x = "401k Participation Rate",
y = "Employer Matching Rate",
title = "Participation Rate Vs Matching Rate")
plot(scatter.prate.mrate)
scatter.prate.mrate <- ggplot(data, aes(prate.clean, mrate)) +
geom_point(colour = "Blue", position = "jitter") +
geom_smooth(method = "lm", colour = "Red") +
labs(x = "401k Participation Rate",
y = "Employer Matching Rate",
title = "Participation Rate Vs Matching Rate")
plot(scatter.prate.mrate)
prate vs mrate
scatter.prate.mrate <- ggplot(data, aes(prate.clean, mrate.clean)) +
geom_point(colour = "Blue", position = "jitter") +
geom_smooth(method = "lm", colour = "Red") +
labs(x = "401k Participation Rate",
y = "Employer Matching Rate",
title = "Participation Rate Vs Matching Rate")
plot(scatter.prate.mrate)
model = lm(prate.clean~mrate.clean, data = data)
summary(model)
plot(model)
plot(model)
plot(model)
hist(model$residuals)
errors.hist <- ggplot(model, aes(residuals())) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$mrate)[2] - range(data$mrate)[1])/60) +
labs(title = "Distribution of Errors", x = "Errors", y = "Frequency")
plot(errors.hist)
errors.hist <- ggplot(model, aes(residuals)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(data$mrate)[2] - range(data$mrate)[1])/60) +
labs(title = "Distribution of Errors", x = "Errors", y = "Frequency")
plot(errors.hist)
errors.hist <- ggplot(model, aes(model$residuals)) +
plot(errors.hist)
errors.hist <- ggplot(model, aes(residuals)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(model$residuals)[2] - range(model$residuals)[1])/60) +
labs(title = "Distribution of Errors", x = "Errors", y = "Frequency")
plot(errors.hist)
errors.hist <- ggplot(model, aes(residuals)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(model$residuals)[2] - range(model$residuals)[1])/60) +
labs(title = "Distribution of Errors", x = "Errors", y = "Frequency")
plot(errors.hist)
errors.hist <- ggplot(model, aes(model$residuals)) +
theme(legend.position = "none") +
geom_histogram(fill = "Blue", colour = "Black", binwidth = (range(model$residuals)[2] - range(model$residuals)[1])/60) +
labs(title = "Distribution of Errors", x = "Errors", y = "Frequency")
plot(errors.hist)
plot(model)
plot(model)
library(lmtest)
coeftest(model, vcov=vcovHC)
waldtest(model, vcov=vcovHC)
setwd(./)
setwd(path.expand(path = ./))
setwd("C:/Users/rohan_000/Documents/Berkeley/W271-2 - Applied Regression and Time Series Analysis/W271-Lab1/Homework2")
library(car)
library(ggplot2)
library(sandwich)
library(lmtest)
load("401k_w271.RData")
desc
model[1]
model$coefficients[1]
install.packages('pastecs')
